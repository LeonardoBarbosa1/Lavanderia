import { defineComponent, useCssVars, ref, openBlock, createElementBlock, createElementVNode, withDirectives, vModelCheckbox, pushScopeId, popScopeId } from "vue";
const _withScopeId = (n) => (pushScopeId("data-v-9c6dbdaa"), n = n(), popScopeId(), n);
const _hoisted_1 = { class: "toggle-slider" };
const _hoisted_2 = { class: "switch" };
const _hoisted_3 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("span", { class: "track" }, [
  /* @__PURE__ */ createElementVNode("span", { class: "handle" })
], -1));
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Vue3ToggleButton",
  props: {
    handleDiameter: { default: "30px" },
    handleDistance: { default: "40px" },
    handleColor: { default: "#fff" },
    handleBorderRadius: { default: "50%" },
    trackColor: { default: "#ccc" },
    trackWidth: { default: "70px" },
    trackHeight: { default: "30px" },
    trackActiveColor: { default: "#2196f3" },
    trackBorderWidth: { default: "1px" },
    trackBorderRadius: { default: "34px" },
    isActive: { type: Boolean, default: true }
  },
  emits: ["update:isActive", "onChange"],
  setup(__props, { emit }) {
    const props = __props;
    useCssVars((_ctx) => ({
      "6354bccb": __props.trackWidth,
      "25183a7c": __props.trackHeight,
      "623dbe68": __props.trackColor,
      "384a0782": __props.trackBorderWidth,
      "e2e9258e": __props.trackBorderRadius,
      "7e99d065": __props.handleDiameter,
      "0dbc428b": __props.handleColor,
      "2f8ce894": __props.handleBorderRadius,
      "7777ab42": __props.trackActiveColor,
      "c49c7066": __props.handleDistance
    }));
    const isActive = ref(props.isActive);
    function setNewToggleState() {
      isActive.value = !isActive.value;
      emit("update:isActive", isActive.value);
      emit("onChange", isActive.value);
    }
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1, [
        createElementVNode("label", _hoisted_2, [
          withDirectives(createElementVNode("input", {
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isActive.value = $event),
            type: "checkbox",
            onClick: setNewToggleState
          }, null, 512), [
            [vModelCheckbox, isActive.value]
          ]),
          _hoisted_3
        ])
      ]);
    };
  }
});
const Vue3ToggleButton_vue_vue_type_style_index_0_scoped_9c6dbdaa_lang = /* @__PURE__ */ (() => ".switch[data-v-9c6dbdaa]{position:relative;display:inline-block;width:var(--6354bccb);height:var(--25183a7c)}input[data-v-9c6dbdaa]{display:none}.track[data-v-9c6dbdaa]{display:flex;align-items:center;position:absolute;width:100%;height:100%;inset:0;background-color:var(--623dbe68);cursor:pointer;border:var(--384a0782) solid var(--623dbe68);border-radius:var(--e2e9258e);transition:.4s}.handle[data-v-9c6dbdaa]{display:flex;width:var(--7e99d065);height:var(--7e99d065);background-color:var(--0dbc428b);border-radius:var(--2f8ce894);transition:.4s}input:checked+.track[data-v-9c6dbdaa]{background-color:var(--7777ab42);border:var(--384a0782) solid var(--7777ab42)}input:focus+.track[data-v-9c6dbdaa]{box-shadow:0 0 1px var(--7777ab42)}input:checked+.track>.handle[data-v-9c6dbdaa]{transform:translate(var(--c49c7066))}\n")();
const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const Vue3ToggleButton = /* @__PURE__ */ _export_sfc(_sfc_main, [["__scopeId", "data-v-9c6dbdaa"]]);
export { Vue3ToggleButton };
