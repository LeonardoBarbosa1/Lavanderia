import { defineComponent, useCssVars, ref, openBlock, createElementBlock, createElementVNode, withDirectives, vModelCheckbox, pushScopeId, popScopeId } from "vue";
const _withScopeId = (n) => (pushScopeId("data-v-c5fa1573"), n = n(), popScopeId(), n);
const _hoisted_1 = { class: "toggle-slider" };
const _hoisted_2 = { class: "switch" };
const _hoisted_3 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createElementVNode("span", { class: "track" }, [
  /* @__PURE__ */ createElementVNode("span", { class: "handle" })
], -1));
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Vue3ToggleButton",
  props: {
    handleDiameter: {
      type: String,
      default: "30px"
    },
    handleDistance: {
      type: String,
      default: "40px"
    },
    handleColor: {
      type: String,
      default: "#fff"
    },
    handleBorderRadius: {
      type: String,
      default: "50%"
    },
    trackColor: {
      type: String,
      default: "#ccc"
    },
    trackWidth: {
      type: String,
      default: "70px"
    },
    trackHeight: {
      type: String,
      default: "30px"
    },
    trackActiveColor: {
      type: String,
      default: "#2196F3"
    },
    trackBorderWidth: {
      type: String,
      default: "1px"
    },
    trackBorderRadius: {
      type: String,
      default: "34px"
    },
    isActive: {
      type: Boolean,
      default: true
    }
  },
  emits: ["update:isActive", "on-change"],
  setup(__props, { emit }) {
    const props = __props;
    useCssVars((_ctx) => ({
      "58c6435e": __props.trackWidth,
      "b399a2e2": __props.trackHeight,
      "57af44fb": __props.trackColor,
      "23c40892": __props.trackBorderWidth,
      "4bc3eb46": __props.trackBorderRadius,
      "88205510": __props.handleDiameter,
      "7308e350": __props.handleColor,
      "5bde616e": __props.handleBorderRadius,
      "913e90d6": __props.trackActiveColor,
      "49f06640": __props.handleDistance
    }));
    const isActive = ref(props.isActive);
    function setNewToggleState() {
      isActive.value = !isActive.value;
      emit("update:isActive", isActive.value);
      emit("on-change", isActive.value);
    }
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1, [
        createElementVNode("label", _hoisted_2, [
          withDirectives(createElementVNode("input", {
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isActive.value = $event),
            type: "checkbox",
            onClick: setNewToggleState
          }, null, 512), [
            [vModelCheckbox, isActive.value]
          ]),
          _hoisted_3
        ])
      ]);
    };
  }
});
const Vue3ToggleButton_vue_vue_type_style_index_0_scoped_c5fa1573_lang = /* @__PURE__ */ (() => ".switch[data-v-c5fa1573]{position:relative;display:inline-block;width:var(--58c6435e);height:var(--b399a2e2)}input[data-v-c5fa1573]{display:none}.track[data-v-c5fa1573]{display:flex;align-items:center;position:absolute;width:100%;height:100%;inset:0;background-color:var(--57af44fb);cursor:pointer;border:var(--23c40892) solid var(--57af44fb);border-radius:var(--4bc3eb46);transition:.4s}.handle[data-v-c5fa1573]{display:flex;width:var(--88205510);height:var(--88205510);background-color:var(--7308e350);border-radius:var(--5bde616e);transition:.4s}input:checked+.track[data-v-c5fa1573]{background-color:var(--913e90d6);border:var(--23c40892) solid var(--913e90d6)}input:focus+.track[data-v-c5fa1573]{box-shadow:0 0 1px var(--913e90d6)}input:checked+.track>.handle[data-v-c5fa1573]{transform:translate(var(--49f06640))}\n")();
const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const Vue3ToggleButton = /* @__PURE__ */ _export_sfc(_sfc_main, [["__scopeId", "data-v-c5fa1573"]]);
export { Vue3ToggleButton };
